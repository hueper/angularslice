{"version":3,"sources":["mdlComponentHandler.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","spinner.js","switch.js","tabs.js","textfield.js","tooltip.js","layout.js","data-table.js","ripple.js","main.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","upgradedList","indexOf","upgradeDomInternal","cssClass","registeredClass","document","querySelectorAll","n","upgradeElementInternal","Element","Error","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","window","CustomEvent","Event","bubbles","cancelable","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","item","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","MaterialButton","this","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","checked","check","uncheck","querySelector","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","JS_RIPPLE_EFFECT","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","e","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","requestAnimationFrame","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","navigator","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","max","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTab","tab","ctx","MDL_JS_RIPPLE_EFFECT","MDL_RIPPLE_CONTAINER","MDL_RIPPLE","href","panel","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","Boolean","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","handleMouseLeave_","boundMouseEnterHandler","boundMouseLeaveHandler","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","tabBar_","charAt","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","textContent","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","clearTimeout","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","Math","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform","isLocalhost","location","hostname","match","protocol","serviceWorker","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","console","error"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new Event('mdl-componentupgraded', {\n          'bubbles': true, 'cancelable': false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentupgraded', true, true);\n      }\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new Event('mdl-componentdowngraded', {\n          'bubbles': true, 'cancelable': false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentdowngraded', true, true);\n      }\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialButton'] = MaterialButton;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialButton.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialButton.prototype.blurHandler_ = function(event) {\n    if (event) {\n      this.element_.blur();\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.disable = function() {\n    this.element_.disabled = true;\n  };\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\n  /**\n   * Enable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.enable = function() {\n    this.element_.disabled = false;\n  };\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\n  /**\n   * Initialize element.\n   */\n  MaterialButton.prototype.init = function() {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialCheckbox'] = MaterialCheckbox;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialCheckbox.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialCheckbox.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialCheckbox.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialCheckbox.prototype['checkToggleState'] =\n      MaterialCheckbox.prototype.checkToggleState;\n\n  /**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialCheckbox.prototype['checkDisabled'] =\n      MaterialCheckbox.prototype.checkDisabled;\n\n  /**\n   * Disable checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n\n  /**\n   * Enable checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n\n  /**\n   * Check checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.check = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n\n  /**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.uncheck = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialCheckbox.prototype.init = function() {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.INPUT);\n\n      var boxOutline = document.createElement('span');\n      boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n      var tickContainer = document.createElement('span');\n      tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      var tickOutline = document.createElement('span');\n      tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n      boxOutline.appendChild(tickOutline);\n\n      this.element_.appendChild(tickContainer);\n      this.element_.appendChild(boxOutline);\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialIconToggle'] = MaterialIconToggle;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialIconToggle.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialIconToggle.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialIconToggle.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialIconToggle.prototype['checkToggleState'] =\n      MaterialIconToggle.prototype.checkToggleState;\n\n  /**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialIconToggle.prototype['checkDisabled'] =\n      MaterialIconToggle.prototype.checkDisabled;\n\n  /**\n   * Disable icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['disable'] =\n      MaterialIconToggle.prototype.disable;\n\n  /**\n   * Enable icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n\n  /**\n   * Check icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.check = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n\n  /**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.uncheck = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['uncheck'] =\n      MaterialIconToggle.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialIconToggle.prototype.init = function() {\n\n    if (this.element_) {\n      this.inputElement_ =\n          this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialMenu'] = MaterialMenu;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialMenu.prototype.init = function() {\n    if (this.element_) {\n      // Create container for the menu.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      this.container_ = container;\n\n      // Create outline for the menu (shadow and background).\n      var outline = document.createElement('div');\n      outline.classList.add(this.CssClasses_.OUTLINE);\n      this.outline_ = outline;\n      container.insertBefore(outline, this.element_);\n\n      // Find the \"for\" element and bind events to it.\n      var forElId = this.element_.getAttribute('for') ||\n                      this.element_.getAttribute('data-mdl-for');\n      var forEl = null;\n      if (forElId) {\n        forEl = document.getElementById(forElId);\n        if (forEl) {\n          this.forElement_ = forEl;\n          forEl.addEventListener('click', this.handleForClick_.bind(this));\n          forEl.addEventListener('keydown',\n              this.handleForKeyboardEvent_.bind(this));\n        }\n      }\n\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n      this.boundItemClick_ = this.handleItemClick_.bind(this);\n      for (var i = 0; i < items.length; i++) {\n        // Add a listener to each menu item.\n        items[i].addEventListener('click', this.boundItemClick_);\n        // Add a tab index to each menu item.\n        items[i].tabIndex = '-1';\n        // Add a keyboard listener to each menu item.\n        items[i].addEventListener('keydown', this.boundItemKeydown_);\n      }\n\n      // Add ripple classes to each item, if the user has enabled ripples.\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n        for (i = 0; i < items.length; i++) {\n          var item = items[i];\n\n          var rippleContainer = document.createElement('span');\n          rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n          var ripple = document.createElement('span');\n          ripple.classList.add(this.CssClasses_.RIPPLE);\n          rippleContainer.appendChild(ripple);\n\n          item.appendChild(rippleContainer);\n          item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        }\n      }\n\n      // Copy alignment classes to the container, so the outline can use them.\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n      }\n\n      container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForClick_ = function(evt) {\n    if (this.element_ && this.forElement_) {\n      var rect = this.forElement_.getBoundingClientRect();\n      var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not position the menu automatically. Requires the developer to\n        // manually specify position.\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.BOTTOM_RIGHT)) {\n        // Position below the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Position above the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Position above the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else {\n        // Default: position below the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      }\n    }\n\n    this.toggle(evt);\n  };\n\n  /**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          items[items.length - 1].focus();\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          items[0].focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          if (currentIndex > 0) {\n            items[currentIndex - 1].focus();\n          } else {\n            items[items.length - 1].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          if (items.length > currentIndex + 1) {\n            items[currentIndex + 1].focus();\n          } else {\n            items[0].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.SPACE ||\n              evt.keyCode === this.Keycodes_.ENTER) {\n          evt.preventDefault();\n          // Send mousedown and mouseup to trigger ripple.\n          var e = new MouseEvent('mousedown');\n          evt.target.dispatchEvent(e);\n          e = new MouseEvent('mouseup');\n          evt.target.dispatchEvent(e);\n          // Send click.\n          evt.target.click();\n        } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n          evt.preventDefault();\n          this.hide();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemClick_ = function(evt) {\n    if (evt.target.hasAttribute('disabled')) {\n      evt.stopPropagation();\n    } else {\n      // Wait some time before closing menu, so the user can see the ripple.\n      this.closing_ = true;\n      window.setTimeout(function(evt) {\n        this.hide();\n        this.closing_ = false;\n      }.bind(this), /** @type {number} */ (this.Constant_.CLOSE_TIMEOUT));\n    }\n  };\n\n  /**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\n  MaterialMenu.prototype.applyClip_ = function(height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not clip.\n      this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      // Clip to the top right corner of the menu.\n      this.element_.style.clip =\n          'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Clip to the bottom left corner of the menu.\n      this.element_.style.clip =\n          'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Clip to the bottom right corner of the menu.\n      this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n          height + 'px ' + width + 'px)';\n    } else {\n      // Default: do not clip (same as clipping to the top left corner).\n      this.element_.style.clip = '';\n    }\n  };\n\n  /**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\n\n  MaterialMenu.prototype.removeAnimationEndListener_ = function(evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\n  MaterialMenu.prototype.addAnimationEndListener_ = function() {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n  };\n\n  /**\n   * Displays the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.show = function(evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n      // Measure the inner element.\n      var height = this.element_.getBoundingClientRect().height;\n      var width = this.element_.getBoundingClientRect().width;\n\n      // Apply the inner element's size to the container and outline.\n      this.container_.style.width = width + 'px';\n      this.container_.style.height = height + 'px';\n      this.outline_.style.width = width + 'px';\n      this.outline_.style.height = height + 'px';\n\n      var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n          this.Constant_.TRANSITION_DURATION_FRACTION;\n\n      // Calculate transition delays for individual menu items, so that they fade\n      // in one at a time.\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      for (var i = 0; i < items.length; i++) {\n        var itemDelay = null;\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n            this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n          itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n              height * transitionDuration) + 's';\n        } else {\n          itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n        }\n        items[i].style.transitionDelay = itemDelay;\n      }\n\n      // Apply the initial clip to the text before we start animating.\n      this.applyClip_(height, width);\n\n      // Wait for the next frame, turn on animation, and apply the final clip.\n      // Also make it visible. This triggers the transitions.\n      window.requestAnimationFrame(function() {\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n        this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n      }.bind(this));\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n\n      // Add a click listener to the document, to close the menu.\n      var callback = function(e) {\n        // Check to see if the document is processing the same event that\n        // displayed the menu in the first place. If so, do nothing.\n        // Also check to see if the menu is in the process of closing itself, and\n        // do nothing in that case.\n        // Also check if the clicked element is a menu item\n        // if so, do nothing.\n        if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n          document.removeEventListener('click', callback);\n          this.hide();\n        }\n      }.bind(this);\n      document.addEventListener('click', callback);\n    }\n  };\n  MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n\n  /**\n   * Hides the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.hide = function() {\n    if (this.element_ && this.container_ && this.outline_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n      // Remove all transition delays; menu items fade out concurrently.\n      for (var i = 0; i < items.length; i++) {\n        items[i].style.removeProperty('transition-delay');\n      }\n\n      // Measure the inner element.\n      var rect = this.element_.getBoundingClientRect();\n      var height = rect.height;\n      var width = rect.width;\n\n      // Turn on animation, and apply the final clip. Also make invisible.\n      // This triggers the transitions.\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.applyClip_(height, width);\n      this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n    }\n  };\n  MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n\n  /**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.toggle = function(evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      this.hide();\n    } else {\n      this.show(evt);\n    }\n  };\n  MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialProgress'] = MaterialProgress;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialProgress.prototype.Constant_ = {\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialProgress.prototype.CssClasses_ = {\n    INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n  };\n\n  /**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\n  MaterialProgress.prototype.setProgress = function(p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n      return;\n    }\n\n    this.progressbar_.style.width = p + '%';\n  };\n  MaterialProgress.prototype['setProgress'] =\n      MaterialProgress.prototype.setProgress;\n\n  /**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\n  MaterialProgress.prototype.setBuffer = function(p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = (100 - p) + '%';\n  };\n  MaterialProgress.prototype['setBuffer'] =\n      MaterialProgress.prototype.setBuffer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialProgress.prototype.init = function() {\n    if (this.element_) {\n      var el = document.createElement('div');\n      el.className = 'progressbar bar bar1';\n      this.element_.appendChild(el);\n      this.progressbar_ = el;\n\n      el = document.createElement('div');\n      el.className = 'bufferbar bar bar2';\n      this.element_.appendChild(el);\n      this.bufferbar_ = el;\n\n      el = document.createElement('div');\n      el.className = 'auxbar bar bar3';\n      this.element_.appendChild(el);\n      this.auxbar_ = el;\n\n      this.progressbar_.style.width = '0%';\n      this.bufferbar_.style.width = '100%';\n      this.auxbar_.style.width = '0%';\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRadio'] = MaterialRadio;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRadio.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onChange_ = function(event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n      var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n      // Different name == different group, so no point updating those.\n      if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n        radios[i]['MaterialRadio'].updateClasses_();\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onMouseup_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Update classes.\n   *\n   * @private\n   */\n  MaterialRadio.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialRadio.prototype.blur_ = function() {\n\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.btnElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.checkDisabled = function() {\n    if (this.btnElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialRadio.prototype['checkDisabled'] =\n      MaterialRadio.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.checkToggleState = function() {\n    if (this.btnElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialRadio.prototype['checkToggleState'] =\n      MaterialRadio.prototype.checkToggleState;\n\n  /**\n   * Disable radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.disable = function() {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n\n  /**\n   * Enable radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.enable = function() {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n\n  /**\n   * Check radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.check = function() {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n\n  /**\n   * Uncheck radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.uncheck = function() {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialRadio.prototype.init = function() {\n    if (this.element_) {\n      this.btnElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RADIO_BTN);\n\n      this.boundChangeHandler_ = this.onChange_.bind(this);\n      this.boundFocusHandler_ = this.onChange_.bind(this);\n      this.boundBlurHandler_ = this.onBlur_.bind(this);\n      this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n\n      var outerCircle = document.createElement('span');\n      outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n      var innerCircle = document.createElement('span');\n      innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n      this.element_.appendChild(outerCircle);\n      this.element_.appendChild(innerCircle);\n\n      var rippleContainer;\n      if (this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(\n            this.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        rippleContainer.appendChild(ripple);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n      this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n      this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSlider'] = MaterialSlider;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSlider.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSlider.prototype.onInput_ = function(event) {\n    this.updateValueStyles_();\n  };\n\n  /**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSlider.prototype.onChange_ = function(event) {\n    this.updateValueStyles_();\n  };\n\n  /**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSlider.prototype.onMouseUp_ = function(event) {\n    event.target.blur();\n  };\n\n  /**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\n  MaterialSlider.prototype.onContainerMouseDown_ = function(event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n      return;\n    }\n\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n      target: event.target,\n      buttons: event.buttons,\n      clientX: event.clientX,\n      clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n  };\n\n  /**\n   * Handle updating of values.\n   *\n   * @private\n   */\n  MaterialSlider.prototype.updateValueStyles_ = function() {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) /\n        (this.element_.max - this.element_.min);\n\n    if (fraction === 0) {\n      this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n\n    if (!this.isIE_) {\n      this.backgroundLower_.style.flex = fraction;\n      this.backgroundLower_.style.webkitFlex = fraction;\n      this.backgroundUpper_.style.flex = 1 - fraction;\n      this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable slider.\n   *\n   * @public\n   */\n  MaterialSlider.prototype.disable = function() {\n    this.element_.disabled = true;\n  };\n  MaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n\n  /**\n   * Enable slider.\n   *\n   * @public\n   */\n  MaterialSlider.prototype.enable = function() {\n\n    this.element_.disabled = false;\n  };\n  MaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n\n  /**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialSlider.prototype.change = function(value) {\n\n    if (typeof value !== 'undefined') {\n      this.element_.value = value;\n    }\n    this.updateValueStyles_();\n  };\n  MaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSlider.prototype.init = function() {\n\n    if (this.element_) {\n      if (this.isIE_) {\n        // Since we need to specify a very large height in IE due to\n        // implementation limitations, we add a parent here that trims it down to\n        // a reasonable size.\n        var containerIE = document.createElement('div');\n        containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n        this.element_.parentElement.insertBefore(containerIE, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        containerIE.appendChild(this.element_);\n      } else {\n        // For non-IE browsers, we need a div structure that sits behind the\n        // slider and allows us to style the left and right sides of it with\n        // different colors.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        var backgroundFlex = document.createElement('div');\n        backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n        container.appendChild(backgroundFlex);\n        this.backgroundLower_ = document.createElement('div');\n        this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n        backgroundFlex.appendChild(this.backgroundLower_);\n        this.backgroundUpper_ = document.createElement('div');\n        this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n        backgroundFlex.appendChild(this.backgroundUpper_);\n      }\n\n      this.boundInputHandler = this.onInput_.bind(this);\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n      this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n      this.element_.addEventListener('input', this.boundInputHandler);\n      this.element_.addEventListener('change', this.boundChangeHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n      this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n\n      this.updateValueStyles_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\n  var MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSpinner'] = MaterialSpinner;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSpinner.prototype.Constant_ = {\n    MDL_SPINNER_LAYER_COUNT: 4\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n  };\n\n  /**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\n  MaterialSpinner.prototype.createLayer = function(index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n    for (var i = 0; i < circleOwners.length; i++) {\n      var circle = document.createElement('div');\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n      circleOwners[i].appendChild(circle);\n    }\n\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n\n    this.element_.appendChild(layer);\n  };\n  MaterialSpinner.prototype['createLayer'] =\n      MaterialSpinner.prototype.createLayer;\n\n  /**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.stop = function() {\n    this.element_.classList.remove('is-active');\n  };\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\n  /**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.start = function() {\n    this.element_.classList.add('is-active');\n  };\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSpinner.prototype.init = function() {\n    if (this.element_) {\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n        this.createLayer(i);\n      }\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSwitch'] = MaterialSwitch;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSwitch.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSwitch.prototype['checkDisabled'] =\n      MaterialSwitch.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialSwitch.prototype['checkToggleState'] =\n      MaterialSwitch.prototype.checkToggleState;\n\n  /**\n   * Disable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n\n  /**\n   * Enable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n\n  /**\n   * Activate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.on = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n\n  /**\n   * Deactivate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.off = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSwitch.prototype.init = function() {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.INPUT);\n\n      var track = document.createElement('div');\n      track.classList.add(this.CssClasses_.TRACK);\n\n      var thumb = document.createElement('div');\n      thumb.classList.add(this.CssClasses_.THUMB);\n\n      var focusHelper = document.createElement('span');\n      focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      thumb.appendChild(focusHelper);\n\n      this.element_.appendChild(track);\n      this.element_.appendChild(thumb);\n\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\n      if (this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(\n            this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundFocusHandler = this.onFocus_.bind(this);\n      this.boundBlurHandler = this.onBlur_.bind(this);\n\n      this.inputElement_.addEventListener('change', this.boundChangeHandler);\n      this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n      this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\n  var MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTabs'] = MaterialTabs;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTabs.prototype.Constant_ = {\n    // None at the moment.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n  };\n\n  /**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\n  MaterialTabs.prototype.initTabs_ = function() {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n        this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ =\n        this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n      new MaterialTab(this.tabs_[i], this);\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialTabs.prototype.resetTabState_ = function() {\n    for (var k = 0; k < this.tabs_.length; k++) {\n      this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialTabs.prototype.resetPanelState_ = function() {\n    for (var j = 0; j < this.panels_.length; j++) {\n      this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTabs.prototype.init = function() {\n    if (this.element_) {\n      this.initTabs_();\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\n  function MaterialTab(tab, ctx) {\n    if (tab) {\n      if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n      }\n\n      tab.addEventListener('click', function(e) {\n        e.preventDefault();\n        var href = tab.href.split('#')[1];\n        var panel = ctx.element_.querySelector('#' + href);\n        ctx.resetTabState_();\n        ctx.resetPanelState_();\n        tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n      });\n\n    }\n  }\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTextfield'] = MaterialTextfield;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n  };\n\n  /**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onKeyDown_ = function(event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n      if (currentRowCount >= this.maxRows) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onReset_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialTextfield.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDisabled = function() {\n    if (this.input_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialTextfield.prototype['checkDisabled'] =\n      MaterialTextfield.prototype.checkDisabled;\n\n  /**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\n  MaterialTextfield.prototype.checkFocus = function() {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n  };\n  MaterialTextfield.prototype['checkFocus'] =\n    MaterialTextfield.prototype.checkFocus;\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkValidity = function() {\n    if (this.input_.validity) {\n      if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n      } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n      }\n    }\n  };\n  MaterialTextfield.prototype['checkValidity'] =\n      MaterialTextfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDirty = function() {\n    if (this.input_.value && this.input_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialTextfield.prototype['checkDirty'] =\n      MaterialTextfield.prototype.checkDirty;\n\n  /**\n   * Disable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.disable = function() {\n    this.input_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\n  /**\n   * Enable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.enable = function() {\n    this.input_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\n  /**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialTextfield.prototype.change = function(value) {\n\n    this.input_.value = value || '';\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialTextfield.prototype.init = function() {\n\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.input_) {\n        if (this.input_.hasAttribute(\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE))) {\n          this.maxRows = parseInt(this.input_.getAttribute(\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE)), 10);\n          if (isNaN(this.maxRows)) {\n            this.maxRows = this.Constant_.NO_MAX_ROWS;\n          }\n        }\n\n        if (this.input_.hasAttribute('placeholder')) {\n          this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n        }\n\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n        this.input_.addEventListener('focus', this.boundFocusHandler);\n        this.input_.addEventListener('blur', this.boundBlurHandler);\n        this.input_.addEventListener('reset', this.boundResetHandler);\n\n        if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n          // TODO: This should handle pasting multi line text.\n          // Currently doesn't.\n          this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n          this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n        }\n        var invalid = this.element_.classList\n          .contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n        if (this.input_.hasAttribute('autofocus')) {\n          this.element_.focus();\n          this.checkFocus();\n        }\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTooltip'] = MaterialTooltip;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTooltip.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n  };\n\n  /**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + (props.width / 2);\n    var top = props.top + (props.height / 2);\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      left = (props.width / 2);\n      if (top + marginTop < 0) {\n        this.element_.style.top = 0;\n        this.element_.style.marginTop = 0;\n      } else {\n        this.element_.style.top = top + 'px';\n        this.element_.style.marginTop = marginTop + 'px';\n      }\n    } else {\n      if (left + marginLeft < 0) {\n        this.element_.style.left = 0;\n        this.element_.style.marginLeft = 0;\n      } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n      }\n    }\n\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n      this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Handle mouseleave for tooltip.\n   *\n   * @private\n   */\n  MaterialTooltip.prototype.handleMouseLeave_ = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTooltip.prototype.init = function() {\n\n    if (this.element_) {\n      var forElId = this.element_.getAttribute('for');\n\n      if (forElId) {\n        this.forElement_ = document.getElementById(forElId);\n      }\n\n      if (this.forElement_) {\n        // It's left here because it prevents accidental text selection on Android\n        if (!this.forElement_.hasAttribute('tabindex')) {\n          this.forElement_.setAttribute('tabindex', '0');\n        }\n\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n        this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);\n        window.addEventListener('touchstart', this.boundMouseLeaveHandler);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialLayout'] = MaterialLayout;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n  };\n\n  /**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n\n    ICON: 'material-icons',\n\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n\n  };\n\n  /**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.contentScrollHandler_ = function() {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n      return;\n    }\n\n    var headerVisible =\n        !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) ||\n        this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n\n    if (this.content_.scrollTop > 0 &&\n        !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    } else if (this.content_.scrollTop <= 0 &&\n        this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.keyboardEventHandler_ = function(evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE &&\n        this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.toggleDrawer();\n    }\n  };\n\n  /**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.screenSizeHandler_ = function() {\n    if (this.screenSizeMediaQuery_.matches) {\n      this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n      // Collapse drawer (if any) when moving to a large screen size.\n      if (this.drawer_) {\n        this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n      }\n    }\n  };\n\n  /**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.drawerToggleHandler_ = function(evt) {\n    if (evt && (evt.type === 'keydown')) {\n      if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n        // prevent scrolling in drawer nav\n        evt.preventDefault();\n      } else {\n        // prevent other keys\n        return;\n      }\n    }\n\n    this.toggleDrawer();\n  };\n\n  /**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerTransitionEndHandler_ = function() {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerClickHandler_ = function() {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetTabState_ = function(tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n      tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetPanelState_ = function(panels) {\n    for (var j = 0; j < panels.length; j++) {\n      panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n  * Toggle drawer state\n  *\n  * @public\n  */\n  MaterialLayout.prototype.toggleDrawer = function() {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.drawer_.setAttribute('aria-hidden', 'false');\n      drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n      this.drawer_.setAttribute('aria-hidden', 'true');\n      drawerButton.setAttribute('aria-expanded', 'false');\n    }\n  };\n  MaterialLayout.prototype['toggleDrawer'] =\n      MaterialLayout.prototype.toggleDrawer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialLayout.prototype.init = function() {\n    if (this.element_) {\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n\n      var focusedElement = this.element_.querySelector(':focus');\n\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n\n      if (focusedElement) {\n        focusedElement.focus();\n      }\n\n      var directChildren = this.element_.childNodes;\n      var numChildren = directChildren.length;\n      for (var c = 0; c < numChildren; c++) {\n        var child = directChildren[c];\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.HEADER)) {\n          this.header_ = child;\n        }\n\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.DRAWER)) {\n          this.drawer_ = child;\n        }\n\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.CONTENT)) {\n          this.content_ = child;\n        }\n      }\n\n      window.addEventListener('pageshow', function(e) {\n        if (e.persisted) { // when page is loaded from back/forward cache\n          // trigger repaint to let layout scroll in safari\n          this.element_.style.overflowY = 'hidden';\n          requestAnimationFrame(function() {\n            this.element_.style.overflowY = '';\n          }.bind(this));\n        }\n      }.bind(this), false);\n\n      if (this.header_) {\n        this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n      }\n\n      var mode = this.Mode_.STANDARD;\n\n      if (this.header_) {\n        if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n          mode = this.Mode_.SEAMED;\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_WATERFALL)) {\n          mode = this.Mode_.WATERFALL;\n          this.header_.addEventListener('transitionend',\n            this.headerTransitionEndHandler_.bind(this));\n          this.header_.addEventListener('click',\n            this.headerClickHandler_.bind(this));\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_SCROLL)) {\n          mode = this.Mode_.SCROLL;\n          container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n        }\n\n        if (mode === this.Mode_.STANDARD) {\n          this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n          this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.WATERFALL) {\n          // Add and remove shadows depending on scroll position.\n          // Also add/remove auxiliary class for styling of the compact version of\n          // the header.\n          this.content_.addEventListener('scroll',\n              this.contentScrollHandler_.bind(this));\n          this.contentScrollHandler_();\n        }\n      }\n\n      // Add drawer toggling button to our layout, if we have an openable drawer.\n      if (this.drawer_) {\n        var drawerButton = this.element_.querySelector('.' +\n          this.CssClasses_.DRAWER_BTN);\n        if (!drawerButton) {\n          drawerButton = document.createElement('div');\n          drawerButton.setAttribute('aria-expanded', 'false');\n          drawerButton.setAttribute('role', 'button');\n          drawerButton.setAttribute('tabindex', '0');\n          drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n\n          var drawerButtonIcon = document.createElement('i');\n          drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n          drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n          drawerButton.appendChild(drawerButtonIcon);\n        }\n\n        if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n          //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n        } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n          //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n        }\n\n        drawerButton.addEventListener('click',\n            this.drawerToggleHandler_.bind(this));\n\n        drawerButton.addEventListener('keydown',\n            this.drawerToggleHandler_.bind(this));\n\n        // Add a class if the layout has a drawer, for altering the left padding.\n        // Adds the HAS_DRAWER to the elements since this.header_ may or may\n        // not be present.\n        this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n\n        // If we have a fixed header, add the button to the header rather than\n        // the layout.\n        if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n          this.header_.insertBefore(drawerButton, this.header_.firstChild);\n        } else {\n          this.element_.insertBefore(drawerButton, this.content_);\n        }\n\n        var obfuscator = document.createElement('div');\n        obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n        this.element_.appendChild(obfuscator);\n        obfuscator.addEventListener('click',\n            this.drawerToggleHandler_.bind(this));\n        this.obfuscator_ = obfuscator;\n\n        this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n        this.drawer_.setAttribute('aria-hidden', 'true');\n      }\n\n      // Keep an eye on screen size, and add/remove auxiliary class for styling\n      // of small screens.\n      this.screenSizeMediaQuery_ = window.matchMedia(\n          /** @type {string} */ (this.Constant_.MAX_WIDTH));\n      this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n      this.screenSizeHandler_();\n\n      // Initialize tabs, if any.\n      if (this.header_ && this.tabBar_) {\n        this.element_.classList.add(this.CssClasses_.HAS_TABS);\n\n        var tabContainer = document.createElement('div');\n        tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n        this.header_.insertBefore(tabContainer, this.tabBar_);\n        this.header_.removeChild(this.tabBar_);\n\n        var leftButton = document.createElement('div');\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n        var leftButtonIcon = document.createElement('i');\n        leftButtonIcon.classList.add(this.CssClasses_.ICON);\n        leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n        leftButton.appendChild(leftButtonIcon);\n        leftButton.addEventListener('click', function() {\n          this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        var rightButton = document.createElement('div');\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n        var rightButtonIcon = document.createElement('i');\n        rightButtonIcon.classList.add(this.CssClasses_.ICON);\n        rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n        rightButton.appendChild(rightButtonIcon);\n        rightButton.addEventListener('click', function() {\n          this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        tabContainer.appendChild(leftButton);\n        tabContainer.appendChild(this.tabBar_);\n        tabContainer.appendChild(rightButton);\n\n        // Add and remove tab buttons depending on scroll position and total\n        // window size.\n        var tabUpdateHandler = function() {\n          if (this.tabBar_.scrollLeft > 0) {\n            leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n\n          if (this.tabBar_.scrollLeft <\n              this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n            rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n        }.bind(this);\n\n        this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n        tabUpdateHandler();\n\n        // Update tabs when the window resizes.\n        var windowResizeHandler = function() {\n          // Use timeouts to make sure it doesn't happen too often.\n          if (this.resizeTimeoutId_) {\n            clearTimeout(this.resizeTimeoutId_);\n          }\n          this.resizeTimeoutId_ = setTimeout(function() {\n            tabUpdateHandler();\n            this.resizeTimeoutId_ = null;\n          }.bind(this), /** @type {number} */ (this.Constant_.RESIZE_TIMEOUT));\n        }.bind(this);\n\n        window.addEventListener('resize', windowResizeHandler);\n\n        if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n          this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        }\n\n        // Select element tabs, document panels\n        var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n        var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n        // Create new tabs for each tab element\n        for (var i = 0; i < tabs.length; i++) {\n          new MaterialLayoutTab(tabs[i], tabs, panels, this);\n        }\n      }\n\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\n  function MaterialLayoutTab(tab, tabs, panels, layout) {\n\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function(e) {\n      if (tab.getAttribute('href').charAt(0) === '#') {\n        e.preventDefault();\n        selectTab();\n      }\n    });\n\n    tab.show = selectTab;\n\n  }\n  window['MaterialLayoutTab'] = MaterialLayoutTab;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\n  var MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n\n  window['MaterialDataTable'] = MaterialDataTable;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialDataTable.prototype.Constant_ = {\n    // None at the moment.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\n  MaterialDataTable.prototype.selectRow_ = function(checkbox, row, opt_rows) {\n    if (row) {\n      return function() {\n        if (checkbox.checked) {\n          row.classList.add(this.CssClasses_.IS_SELECTED);\n        } else {\n          row.classList.remove(this.CssClasses_.IS_SELECTED);\n        }\n      }.bind(this);\n    }\n\n    if (opt_rows) {\n      return function() {\n        var i;\n        var el;\n        if (checkbox.checked) {\n          for (i = 0; i < opt_rows.length; i++) {\n            el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n            el['MaterialCheckbox'].check();\n            opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n          }\n        } else {\n          for (i = 0; i < opt_rows.length; i++) {\n            el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n            el['MaterialCheckbox'].uncheck();\n            opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n          }\n        }\n      }.bind(this);\n    }\n  };\n\n  /**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\n  MaterialDataTable.prototype.createCheckbox_ = function(row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n      'mdl-checkbox',\n      'mdl-js-checkbox',\n      'mdl-js-ripple-effect',\n      this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n\n    if (row) {\n      checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n      checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n      checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialDataTable.prototype.init = function() {\n    if (this.element_) {\n      var firstHeader = this.element_.querySelector('th');\n      var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n      var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n      var rows = bodyRows.concat(footRows);\n\n      if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n        var th = document.createElement('th');\n        var headerCheckbox = this.createCheckbox_(null, rows);\n        th.appendChild(headerCheckbox);\n        firstHeader.parentElement.insertBefore(th, firstHeader);\n\n        for (var i = 0; i < rows.length; i++) {\n          var firstCell = rows[i].querySelector('td');\n          if (firstCell) {\n            var td = document.createElement('td');\n            if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n              var rowCheckbox = this.createCheckbox_(rows[i]);\n              td.appendChild(rowCheckbox);\n            }\n            rows[i].insertBefore(td, firstCell);\n          }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRipple'] = MaterialRipple;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n  };\n\n  /**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.downHandler_ = function(event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n      var rect = this.element_.getBoundingClientRect();\n      this.boundHeight = rect.height;\n      this.boundWidth = rect.width;\n      this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n          rect.height * rect.height) * 2 + 2;\n      this.rippleElement_.style.width = this.rippleSize_ + 'px';\n      this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n      this.ignoringMouseDown_ = false;\n    } else {\n      if (event.type === 'touchstart') {\n        this.ignoringMouseDown_ = true;\n      }\n      var frameCount = this.getFrameCount();\n      if (frameCount > 0) {\n        return;\n      }\n      this.setFrameCount(1);\n      var bound = event.currentTarget.getBoundingClientRect();\n      var x;\n      var y;\n      // Check if we are handling a keyboard click.\n      if (event.clientX === 0 && event.clientY === 0) {\n        x = Math.round(bound.width / 2);\n        y = Math.round(bound.height / 2);\n      } else {\n        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n        x = Math.round(clientX - bound.left);\n        y = Math.round(clientY - bound.top);\n      }\n      this.setRippleXY(x, y);\n      this.setRippleStyles(true);\n      window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n  };\n\n  /**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.upHandler_ = function(event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n      // Allow a repaint to occur before removing this class, so the animation\n      // shows for tap events, which seem to trigger a mouseup too soon after\n      // mousedown.\n      window.setTimeout(function() {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n      }.bind(this), 0);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialRipple.prototype.init = function() {\n    if (this.element_) {\n      var recentering =\n          this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n      if (!this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n        this.rippleElement_ = this.element_.querySelector('.' +\n            this.CssClasses_.RIPPLE);\n        this.frameCount_ = 0;\n        this.rippleSize_ = 0;\n        this.x_ = 0;\n        this.y_ = 0;\n\n        // Touch start produces a compat mouse down event, which would cause a\n        // second ripples. To avoid that, we use this property to ignore the first\n        // mouse down after a touch start.\n        this.ignoringMouseDown_ = false;\n\n        this.boundDownHandler = this.downHandler_.bind(this);\n        this.element_.addEventListener('mousedown',\n          this.boundDownHandler);\n        this.element_.addEventListener('touchstart',\n            this.boundDownHandler);\n\n        this.boundUpHandler = this.upHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundUpHandler);\n        this.element_.addEventListener('mouseleave', this.boundUpHandler);\n        this.element_.addEventListener('touchend', this.boundUpHandler);\n        this.element_.addEventListener('blur', this.boundUpHandler);\n\n        /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n        this.getFrameCount = function() {\n          return this.frameCount_;\n        };\n\n        /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n        this.setFrameCount = function(fC) {\n          this.frameCount_ = fC;\n        };\n\n        /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n        this.getRippleElement = function() {\n          return this.rippleElement_;\n        };\n\n        /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n        this.setRippleXY = function(newX, newY) {\n          this.x_ = newX;\n          this.y_ = newY;\n        };\n\n        /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n        this.setRippleStyles = function(start) {\n          if (this.rippleElement_ !== null) {\n            var transformString;\n            var scale;\n            var size;\n            var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n            if (start) {\n              scale = this.Constant_.INITIAL_SCALE;\n              size = this.Constant_.INITIAL_SIZE;\n            } else {\n              scale = this.Constant_.FINAL_SCALE;\n              size = this.rippleSize_ + 'px';\n              if (recentering) {\n                offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                  this.boundHeight / 2 + 'px)';\n              }\n            }\n\n            transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n            this.rippleElement_.style.webkitTransform = transformString;\n            this.rippleElement_.style.msTransform = transformString;\n            this.rippleElement_.style.transform = transformString;\n\n            if (start) {\n              this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n            } else {\n              this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n          }\n        };\n\n        /**\n         * Handles an animation frame.\n         */\n        this.animFrameHandler = function() {\n          if (this.frameCount_-- > 0) {\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\n          } else {\n            this.setRippleStyles(false);\n          }\n        };\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n  });\n})();\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n"],"sourceRoot":"/source/"}